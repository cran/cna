// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

typedef ListOf<IntegerVector> intList;
typedef ListOf<intList> recIntList; // recursive intList = list of intList
typedef ListOf<NumericMatrix> numMatList;

// C_isSubsetOf
bool C_isSubsetOf(IntegerVector x, IntegerVector y);
RcppExport SEXP cna_C_isSubsetOf(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_isSubsetOf(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_hasSupersetIn
LogicalVector C_hasSupersetIn(intList x, intList y);
RcppExport SEXP cna_C_hasSupersetIn(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< intList >::type x(xSEXP);
    Rcpp::traits::input_parameter< intList >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_hasSupersetIn(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_intList_minimal
bool C_intList_minimal(intList x, intList ref);
RcppExport SEXP cna_C_intList_minimal(SEXP xSEXP, SEXP refSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< intList >::type x(xSEXP);
    Rcpp::traits::input_parameter< intList >::type ref(refSEXP);
    rcpp_result_gen = Rcpp::wrap(C_intList_minimal(x, ref));
    return rcpp_result_gen;
END_RCPP
}
// C_minimal
LogicalVector C_minimal(recIntList x, recIntList ref);
RcppExport SEXP cna_C_minimal(SEXP xSEXP, SEXP refSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< recIntList >::type x(xSEXP);
    Rcpp::traits::input_parameter< recIntList >::type ref(refSEXP);
    rcpp_result_gen = Rcpp::wrap(C_minimal(x, ref));
    return rcpp_result_gen;
END_RCPP
}
// C_paste_intList
intList C_paste_intList(intList x, intList y);
RcppExport SEXP cna_C_paste_intList(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< intList >::type x(xSEXP);
    Rcpp::traits::input_parameter< intList >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_paste_intList(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_conCov
NumericVector C_conCov(NumericVector x, NumericVector y, IntegerVector f);
RcppExport SEXP cna_C_conCov(SEXP xSEXP, SEXP ySEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(C_conCov(x, y, f));
    return rcpp_result_gen;
END_RCPP
}
// C_subsetMin
double C_subsetMin(NumericVector x, IntegerVector sub);
RcppExport SEXP cna_C_subsetMin(SEXP xSEXP, SEXP subSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sub(subSEXP);
    rcpp_result_gen = Rcpp::wrap(C_subsetMin(x, sub));
    return rcpp_result_gen;
END_RCPP
}
// C_conjScore
NumericMatrix C_conjScore(NumericMatrix x, IntegerMatrix m);
RcppExport SEXP cna_C_conjScore(SEXP xSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(C_conjScore(x, m));
    return rcpp_result_gen;
END_RCPP
}
// C_init_ii
IntegerVector C_init_ii(IntegerVector nn, LogicalVector st);
RcppExport SEXP cna_C_init_ii(SEXP nnSEXP, SEXP stSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type nn(nnSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type st(stSEXP);
    rcpp_result_gen = Rcpp::wrap(C_init_ii(nn, st));
    return rcpp_result_gen;
END_RCPP
}
// C_set_lim
IntegerVector C_set_lim(IntegerVector nn, LogicalVector st);
RcppExport SEXP cna_C_set_lim(SEXP nnSEXP, SEXP stSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type nn(nnSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type st(stSEXP);
    rcpp_result_gen = Rcpp::wrap(C_set_lim(nn, st));
    return rcpp_result_gen;
END_RCPP
}
// max_which
int max_which(LogicalVector x);
RcppExport SEXP cna_max_which(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< LogicalVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(max_which(x));
    return rcpp_result_gen;
END_RCPP
}
// C_increment
IntegerVector C_increment(IntegerVector ii, IntegerVector nn, LogicalVector st, IntegerVector lim);
RcppExport SEXP cna_C_increment(SEXP iiSEXP, SEXP nnSEXP, SEXP stSEXP, SEXP limSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ii(iiSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nn(nnSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type st(stSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type lim(limSEXP);
    rcpp_result_gen = Rcpp::wrap(C_increment(ii, nn, st, lim));
    return rcpp_result_gen;
END_RCPP
}
// C_find_asf
IntegerMatrix C_find_asf(IntegerVector conjlen, numMatList x, NumericVector y, IntegerVector f, double con, double cov, int maxSol);
RcppExport SEXP cna_C_find_asf(SEXP conjlenSEXP, SEXP xSEXP, SEXP ySEXP, SEXP fSEXP, SEXP conSEXP, SEXP covSEXP, SEXP maxSolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type conjlen(conjlenSEXP);
    Rcpp::traits::input_parameter< numMatList >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type con(conSEXP);
    Rcpp::traits::input_parameter< double >::type cov(covSEXP);
    Rcpp::traits::input_parameter< int >::type maxSol(maxSolSEXP);
    rcpp_result_gen = Rcpp::wrap(C_find_asf(conjlen, x, y, f, con, cov, maxSol));
    return rcpp_result_gen;
END_RCPP
}
// C_conj_conCov
NumericVector C_conj_conCov(IntegerVector cols, NumericMatrix x, NumericVector y, IntegerVector f);
RcppExport SEXP cna_C_conj_conCov(SEXP colsSEXP, SEXP xSEXP, SEXP ySEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type cols(colsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(C_conj_conCov(cols, x, y, f));
    return rcpp_result_gen;
END_RCPP
}
// C_disj_conCov
NumericVector C_disj_conCov(IntegerVector cols, NumericMatrix x, NumericVector y, IntegerVector f);
RcppExport SEXP cna_C_disj_conCov(SEXP colsSEXP, SEXP xSEXP, SEXP ySEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type cols(colsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(C_disj_conCov(cols, x, y, f));
    return rcpp_result_gen;
END_RCPP
}
// C_isSubsetOf1
bool C_isSubsetOf1(IntegerVector x, IntegerVector y);
RcppExport SEXP cna_C_isSubsetOf1(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_isSubsetOf1(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_hasSubsetInM
LogicalVector C_hasSubsetInM(IntegerMatrix y, IntegerMatrix x);
RcppExport SEXP cna_C_hasSubsetInM(SEXP ySEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_hasSubsetInM(y, x));
    return rcpp_result_gen;
END_RCPP
}
// C_countUniques
IntegerVector C_countUniques(IntegerMatrix x);
RcppExport SEXP cna_C_countUniques(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_countUniques(x));
    return rcpp_result_gen;
END_RCPP
}
// C_duplicatedMat
LogicalVector C_duplicatedMat(IntegerMatrix x);
RcppExport SEXP cna_C_duplicatedMat(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_duplicatedMat(x));
    return rcpp_result_gen;
END_RCPP
}
// C_uniqueMat
IntegerMatrix C_uniqueMat(IntegerMatrix x);
RcppExport SEXP cna_C_uniqueMat(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_uniqueMat(x));
    return rcpp_result_gen;
END_RCPP
}
// C_selectCols
IntegerMatrix C_selectCols(IntegerMatrix x, IntegerVector idx);
RcppExport SEXP cna_C_selectCols(SEXP xSEXP, SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(C_selectCols(x, idx));
    return rcpp_result_gen;
END_RCPP
}
// C_uniqueCombs
IntegerMatrix C_uniqueCombs(IntegerMatrix x, IntegerVector idx);
RcppExport SEXP cna_C_uniqueCombs(SEXP xSEXP, SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(C_uniqueCombs(x, idx));
    return rcpp_result_gen;
END_RCPP
}
